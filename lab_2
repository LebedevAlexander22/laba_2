"""Вариант 29.
Шеснадцатиричные числа, у которых 3 справа цифра равна А, расположенные в порядке убывания. Для каждой такой последовательности максимальное число вывести прописью."""
import re
spisok=[]
nums="  "
maxFound=[]
a = True
bigNum=" "
ind=0
dir={'0':'ноль','1':'один','2':'два','3':'три','4':'четыре','5':'пять','6':'шесть','7':'семь','8':'восемь','9':'девять','a':'десять','b':'одиннадцать','c':'двенадцать','d':'тринадцать','e':'четырнадцать','f':'пятнадцать'}
with open('text.txt', 'r') as spisok:
    while a != False :
        nums=spisok.readline()#читаем по строкам
        nums = re.findall(r"[0-9A-Fa-f]{0,}A|a[0-9A-Fa-f]{2}\b",nums)#неограниченное кол-во символов шестнадцетиричного алфавита,затем А или a после нее 2 символа тоже изшестнадцеритчного алфавита
        if len(nums)==0:
            print("файл кончился")
            a=False
        else:
                for i in range(0,len(nums)):

                    if i+1 < len(nums)  and int(nums[i],16) > int(nums[i+1],16): #находим верную последовательность чисел в порядке убывания
                        maxFound.append(int(nums[i],16))
                    elif len(maxFound) >1:#благодаря этому условию мы берем только от 2 и более чисел тоесть отбрасывем одиночные числа
                        maxFound.append(int(nums[i], 16))#добовляем последний элемент последовательности
                        bigNum=str(max(maxFound)) #находим максимум
                        maxFound=list((map( lambda x:hex(x),maxFound))) # превращаем десятичные числа в шестинадцеричные
                        ind +=1 #добовляем +1 к разряду
                        print(maxFound,'-',"Последовательность № ",ind,'\n')
                        for i in bigNum[2:]: print(dir[i],"\n") # выводим наибольшее число прописью
                        maxFound.clear()
                    else:
                        None
